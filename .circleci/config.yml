# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.5
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pip install flake8 pytest
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --exclude=site-packages --select=E901,E999,F821,F822,F823 --show-source --statistics
            # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
            flake8 . --count --exclude=site-packages --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            # pytest

      - store_artifacts:
          path: test-reports
          destination: test-reports

  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:2.7.14
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            # python3 -m venv venv
            # . venv/bin/activate
            pip install --user -r requirements.txt

      - save_cache:
          paths:
            - ~/repo
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      - run:
          name: run tests
          command: |
            # . venv/bin/activate
            pip install --user flake8 pytest
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --exclude=site-packages --select=E901,E999,F821,F822,F823 --show-source --statistics
            # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
            flake8 . --count --exclude=site-packages --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            # pytest

      - store_artifacts:
          path: test-reports
          destination: test-reports
